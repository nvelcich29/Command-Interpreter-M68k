00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.12.29
Created On: 4/5/2019 10:21:48 AM

00000000                             1  *-----------------------------------------------------------
00000000                             2  * Title      : ECE441 Design Project Part 1
00000000                             3  * Written by : Nicholas Velcich
00000000                             4  * Date       : JAN 03 2019
00000000                             5  * Description:
00000000                             6  *-----------------------------------------------------------
00000000                             7      
00000000                             8      
00000000                             9      
00000900                            10      ORG $900
00000900  2039 00A00000             11      MOVE.L  $A00000,D0
00000906                            12      ;DIVU    D0,D7
00000906                            13      
00000906                            14  BUS_ERR:
00000906  48E7 FFFF                 15      MOVEM.L D0-D7/A0-A7,-(A7)
0000090A  4BF9 00001EAD             16      LEA MSG_BUS_ER,A5
00000910  4DF9 00001EC0             17      LEA MSG_BUS_ER_ED,A6
00000916  6100 0762                 18      BSR PRINT
0000091A  6100 00A2                 19      BSR BA_ER_PRINT
0000091E  4CDF FFFF                 20      MOVEM.L (A7)+,D0-D7/A0-A7
00000922  6100 11AC                 21      BSR DF_D
00000926                            22  ADRS_ERR:
00000926  48E7 FFFF                 23      MOVEM.L D0-D7/A0-A7,-(A7)
0000092A  4BF9 00001EC0             24      LEA MSG_ADDR_ER,A5
00000930  4DF9 00001ED7             25      LEA MSG_ADDR_ER_ED,A6
00000936  6100 0742                 26      BSR PRINT
0000093A  6100 0082                 27      BSR BA_ER_PRINT
0000093E  4CDF FFFF                 28      MOVEM.L (A7)+,D0-D7/A0-A7
00000942  6100 118C                 29      BSR DF_D
00000946                            30  
00000946                            31  DIV_ZERO:
00000946  4BF9 00001F11             32      LEA MSG_0_ER,A5
0000094C  4DF9 00001F29             33      LEA MSG_0_ER_ED,A6
00000952  6100 0726                 34      BSR PRINT
00000956  6100 1178                 35      BSR DF_D
0000095A                            36  ILL_INST:
0000095A  4DF9 00001ED7             37      LEA MSG_ILL_ER,A6
00000960  4BF9 00001EF4             38      LEA MSG_ILL_ER_ED,A5
00000966  6100 0712                 39      BSR PRINT
0000096A  6100 1164                 40      BSR DF_D
0000096E                            41  CHK_INST:
0000096E  4DF9 00001F29             42      LEA MSG_CHK_ER,A6
00000974  4BF9 00001F42             43      LEA MSG_CHK_ER_ED,A5
0000097A  6100 06FE                 44      BSR PRINT
0000097E  6100 1150                 45      BSR DF_D
00000982                            46  PRIV_VIOL:
00000982  4DF9 00001EF4             47      LEA MSG_PRIVILEGE_ER,A6
00000988  4BF9 00001F11             48      LEA MSG_PRIVILEGE_ER_ED,A5
0000098E  6100 06EA                 49      BSR PRINT
00000992  6100 113C                 50      BSR DF_D
00000996                            51  LINE_A:
00000996  4DF9 00001F42             52      LEA MSG_LINE_A_ER,A6
0000099C  4BF9 00001F51             53      LEA MSG_LINE_A_ER_ED,A5
000009A2  6100 06D6                 54      BSR PRINT
000009A6  6100 1128                 55      BSR DF_D
000009AA                            56  LINE_F:
000009AA  4DF9 00001F51             57      LEA MSG_LINE_F_ER,A6
000009B0  4BF9 00001F60             58      LEA MSG_LINE_F_ER_ED,A5
000009B6  6100 06C2                 59      BSR PRINT
000009BA  6100 1114                 60      BSR DF_D
000009BE                            61  BA_ER_PRINT:
000009BE  302F 0044                 62      MOVE.W  $44(A7),D0
000009C2  7402                      63      MOVE.L  #2,D2
000009C4  4DF9 00003256             64      LEA OUTPUT_BUFF,A6
000009CA  6100 089E                 65      BSR HEX2ASCII
000009CE  4BF9 00003256             66      LEA OUTPUT_BUFF,A5
000009D4  6100 06B8                 67      BSR PRINT_C
000009D8  6100 136E                 68      BSR PRINT_SPACE
000009DC                            69      
000009DC  202F 0046                 70      MOVE.L  $46(A7),D0
000009E0  7404                      71      MOVE.L  #4,D2
000009E2  4DF9 00003256             72      LEA OUTPUT_BUFF,A6
000009E8  6100 0880                 73      BSR HEX2ASCII
000009EC  4BF9 00003256             74      LEA OUTPUT_BUFF,A5
000009F2  6100 069A                 75      BSR PRINT_C
000009F6  6100 1350                 76      BSR PRINT_SPACE
000009FA                            77      
000009FA  302F 0054                 78      MOVE.W  $54(A7),D0
000009FE  7402                      79      MOVE.L  #2,D2
00000A00  4DF9 00003256             80      LEA OUTPUT_BUFF,A6
00000A06  6100 0862                 81      BSR HEX2ASCII
00000A0A  4BF9 00003256             82      LEA OUTPUT_BUFF,A5
00000A10  6100 0668                 83      BSR PRINT
00000A14  4E75                      84      RTS
00000A16                            85      
00000A16                            86      
00000A16                            87  
00001000                            88      ORG    $1000
00001000                            89  START:
00001000  21FC 00000906 0008        90      MOVE.L  #BUS_ERR,$8
00001008  21FC 00000926 000C        91      MOVE.L  #ADRS_ERR,$C
00001010  21FC 0000095A 0010        92      MOVE.L  #ILL_INST,$10
00001018  21FC 00000946 0014        93      MOVE.L  #DIV_ZERO,$14
00001020  21FC 0000096E 0018        94      MOVE.L  #CHK_INST,$18
00001028  21FC 00000982 0020        95      MOVE.L  #PRIV_VIOL,$20
00001030  21FC 00000996 0028        96      MOVE.L  #LINE_A,$28
00001038  21FC 000009AA 002C        97      MOVE.L  #LINE_F,$2C     
00001040  4BF9 00001DB9             98      LEA MSG_WELCOME,A5
00001046  4DF9 00001DE2             99      LEA MSG_WELCOME_ED,A6
0000104C  6100 002C                100      BSR PRINT
00001050                           101  RESET:
00001050  45F9 000034AC            102      LEA HISTORY_BUFF,A2
00001056  14BC 0000                103      MOVE.B #0,(A2)
0000105A  4FF9 00004400            104      LEA STACK,A7        ;SET(RESET) A7
00001060                           105  MAIN:    
00001060  4BF9 00001DE2            106      LEA MSG_PROM, A5
00001066  4DF9 00001DED            107      LEA MSG_PROM_ED, A6
0000106C  6100 0020                108      BSR PRINT_C
00001070  6100 0030                109      BSR INPUT
00001074  6100 004A                110      BSR INTERPRETER
00001078  60E6                     111      BRA MAIN
0000107A                           112  
0000107A                           113  *------------------SUBROUTINE------------*    
0000107A                           114  ;Standard I/O
0000107A                           115  ;Print WITH carrige return and line feed
0000107A                           116  ;Print string stored within address range marked by A5 and A6
0000107A                           117  PRINT:
0000107A  48E7 C040                118      MOVEM.L D0-D1/A1,-(A7)
0000107E  224D                     119      MOVEA.L A5,A1           
00001080  9DCD                     120      SUBA.L A5,A6            
00001082  220E                     121      MOVE.L A6,D1            
00001084  7000                     122      MOVE.L #0,D0            
00001086  4E4F                     123      TRAP #15
00001088  4CDF 0203                124      MOVEM.L (A7)+,D0-D1/A1
0000108C  4E75                     125      RTS
0000108E                           126  ;Print WITHOUT carrige return and line feed
0000108E                           127  ;Print string stored within address range marked by A5 and A6
0000108E                           128  PRINT_C:            
0000108E  48E7 C040                129      MOVEM.L D0-D1/A1,-(A7)
00001092  224D                     130      MOVEA.L A5,A1           
00001094  9DCD                     131      SUBA.L A5,A6            
00001096  220E                     132      MOVE.L A6,D1            
00001098  7001                     133      MOVE.L #1,D0
0000109A  4E4F                     134      TRAP #15
0000109C  4CDF 0203                135      MOVEM.L (A7)+,D0-D1/A1
000010A0  4E75                     136      RTS
000010A2                           137  ;Store input string to buffer
000010A2                           138  ;Marked
000010A2                           139  INPUT:
000010A2  48E7 C040                140      MOVEM.L D0-D1/A1,-(A7)
000010A6  43F9 00003000            141      LEA INPUT_BUFF,A1  ;EVERY WORDS COMES FROM KEYBOARD WILL BE STORED AT BUFF AREA
000010AC  7002                     142      MOVE.L #2,D0
000010AE  4E4F                     143      TRAP #15
000010B0  D2C1                     144      ADDA.W D1,A1
000010B2  12BC 0000                145      MOVE.B #NULL,(A1)
000010B6  0C01 0000                146      CMPI.B #0,D1
000010BA  4CDF 0203                147      MOVEM.L (A7)+,D0-D1/A1
000010BE  4E75                     148      RTS
000010C0                           149  
000010C0                           150  ;Determine which command been input and branch accordingly 
000010C0                           151  INTERPRETER:    
000010C0                           152      ;Check if input buffer is empty
000010C0  43F9 00003000            153      LEA INPUT_BUFF,A1
000010C6  0C11 0000                154      CMPI.B #NULL,(A1)
000010CA  6700 0172                155      BEQ INTERPRETER_END
000010CE                           156   
000010CE                           157      ;Check if it's HELP command
000010CE  4BF9 00001D78            158      LEA MSG_CMD_HELP,A5
000010D4  4DF9 00001D7C            159      LEA MSG_CMD_HELP_ED,A6
000010DA  43F9 00003000            160      LEA INPUT_BUFF,A1
000010E0  6100 015E                161      BSR COMPARE
000010E4  6700 024A                162      BEQ HELP   
000010E8                           163      
000010E8                           164      ;Block search
000010E8  4BF9 00001D7E            165      LEA MSG_CMD_BSCH,A5
000010EE  4DF9 00001D82            166      LEA MSG_CMD_BSCH_ED,A6
000010F4  43F9 00003000            167      LEA INPUT_BUFF,A1
000010FA  6100 0144                168      BSR COMPARE
000010FE  6700 04E0                169      BEQ BSCH
00001102                           170  
00001102                           171      
00001102                           172      ;Addition
00001102  4BF9 00001D84            173      LEA MSG_CMD_ADD,A5
00001108  4DF9 00001D87            174      LEA MSG_CMD_ADD_ED,A6
0000110E  43F9 00003000            175      LEA INPUT_BUFF,A1
00001114  6100 012A                176      BSR COMPARE
00001118  6700 0564                177      BEQ ADD
0000111C                           178  
0000111C                           179      ;And
0000111C  4BF9 00001D89            180      LEA MSG_CMD_AND,A5
00001122  4DF9 00001D8C            181      LEA MSG_CMD_AND_ED,A6
00001128  43F9 00003000            182      LEA INPUT_BUFF,A1
0000112E  6100 0110                183      BSR COMPARE 
00001132  6700 057E                184      BEQ AND       
00001136                           185  
00001136                           186      ;Recall Last command
00001136  4BF9 00001D8E            187      LEA MSG_CMD_RC,A5
0000113C  4DF9 00001D8F            188      LEA MSG_CMD_RC_ED,A6
00001142  43F9 00003000            189      LEA INPUT_BUFF,A1
00001148  6100 00F6                190      BSR COMPARE
0000114C  6700 0598                191      BEQ RC
00001150                           192      
00001150                           193      ;MEMORY DISPLAY
00001150  4BF9 00001D91            194      LEA MSG_CMD_MDSP,A5
00001156  4DF9 00001D95            195      LEA MSG_CMD_MDSP_ED,A6
0000115C  43F9 00003000            196      LEA INPUT_BUFF,A1
00001162  6100 00DC                197      BSR COMPARE
00001166  6700 05E0                198      BEQ MDSP
0000116A                           199      
0000116A                           200      ;EXIT
0000116A  4BF9 00001D97            201      LEA MSG_CMD_EXIT,A5
00001170  4DF9 00001D9B            202      LEA MSG_CMD_EXIT_ED,A6
00001176  43F9 00003000            203      LEA INPUT_BUFF,A1
0000117C  6100 00C2                204      BSR COMPARE
00001180  6700 0BF2                205      BEQ EXIT
00001184                           206      
00001184                           207      ;MEMORY MANAGMENT
00001184  4BF9 00001D9D            208      LEA MSG_CMD_MM,A5
0000118A  4DF9 00001D9F            209      LEA MSG_CMD_MM_ED,A6
00001190  43F9 00003000            210      LEA INPUT_BUFF,A1
00001196  6100 00A8                211      BSR COMPARE
0000119A  6700 06BC                212      BEQ MM
0000119E                           213      
0000119E                           214      ;MEMORY SET
0000119E  4BF9 00001DA1            215      LEA MSG_CMD_MS,A5
000011A4  4DF9 00001DA3            216      LEA MSG_CMD_MS_ED,A6
000011AA  43F9 00003000            217      LEA INPUT_BUFF,A1
000011B0  6100 008E                218      BSR COMPARE
000011B4  6700 072E                219      BEQ MS
000011B8                           220      
000011B8                           221      ;BLOCK FILL
000011B8  4BF9 00001DA5            222      LEA MSG_CMD_BF,A5
000011BE  4DF9 00001DA7            223      LEA MSG_CMD_BF_ED,A6
000011C4  43F9 00003000            224      LEA INPUT_BUFF,A1
000011CA  6100 0074                225      BSR COMPARE
000011CE  6700 0776                226      BEQ BF
000011D2                           227      
000011D2                           228      ;BLOCK MOVE
000011D2  4BF9 00001DA9            229      LEA MSG_CMD_BMOV,A5
000011D8  4DF9 00001DAD            230      LEA MSG_CMD_BMOV_ED,A6
000011DE  43F9 00003000            231      LEA INPUT_BUFF,A1
000011E4  6100 005A                232      BSR COMPARE
000011E8  6700 07C0                233      BEQ BMOV
000011EC                           234      
000011EC                           235      ;DISPLAY REGISTERS
000011EC  4BF9 00001DB7            236      LEA MSG_CMD_DF,A5
000011F2  4DF9 00001DB9            237      LEA MSG_CMD_DF_ED,A6
000011F8  43F9 00003000            238      LEA INPUT_BUFF,A1
000011FE  6100 0040                239      BSR COMPARE
00001202  6700 07DA                240      BEQ DF
00001206                           241      
00001206                           242      ;BLOCK TEST
00001206  4BF9 00001DAF            243      LEA MSG_CMD_BT,A5
0000120C  4DF9 00001DB1            244      LEA MSG_CMD_BT_ED,A6
00001212  43F9 00003000            245      LEA INPUT_BUFF,A1
00001218  6100 0026                246      BSR COMPARE
0000121C  6700 09A2                247      BEQ BT
00001220                           248      
00001220                           249      ;GO
00001220  4BF9 00001DB3            250      LEA MSG_CMD_GO,A5
00001226  4DF9 00001DB5            251      LEA MSG_CMD_GO_ED,A6
0000122C  43F9 00003000            252      LEA INPUT_BUFF,A1
00001232  6100 000C                253      BSR COMPARE
00001236  6700 0AA2                254      BEQ GO    
0000123A                           255      ;Invalid input
0000123A  6100 04E8                256      BSR SYNTAX_ER
0000123E                           257  INTERPRETER_END:    
0000123E  4E75                     258      RTS
00001240                           259  
00001240                           260  ;Compare strong from A1 to NULL or SPACE 
00001240                           261  ;With string from A5 to A6
00001240                           262  COMPARE:                    
00001240  0C11 0020                263      CMPI.B #SPACE,(A1)      ;Check if end of command(SPACE)
00001244  6700 0020                264      BEQ COMPARE_CHK_END
00001248  0C11 0000                265      CMPI.B #NULL, (A1)
0000124C  6700 0018                266      BEQ COMPARE_CHK_END     ;Check if end of command(NULL)
00001250  0C11 002E                267      CMPI.B #DOT, (A1)
00001254  6700 0010                268      BEQ COMPARE_CHK_END
00001258  BDCD                     269      CMPA.L A5,A6
0000125A  6700 000C                270      BEQ COMPARE_END
0000125E  BB09                     271      CMP.B (A1)+,(A5)+       
00001260  6600 0006                272      BNE COMPARE_END         ;If content not the same end
00001264  60DA                     273      BRA COMPARE
00001266                           274  COMPARE_CHK_END:
00001266  BDCD                     275      CMPA.L A5,A6
00001268                           276  COMPARE_END:
00001268  4E75                     277      RTS
0000126A                           278  
0000126A                           279  ; Convert HEX num (D0) to ASCII, length in D2 (Bytes) before use
0000126A                           280  ; ASCII string buffer should start from A6
0000126A                           281  HEX2ASCII:
0000126A  48E7 5000                282      MOVEM.L D1/D3, -(A7)
0000126E  E39A                     283      ROL.L #1,D2
00001270  DDC2                     284      ADD.L D2, A6
00001272  2602                     285      MOVE.L D2,D3
00001274                           286  HEX2ASCII_LOOP:
00001274  2200                     287      MOVE.L D0, D1
00001276  0281 0000000F            288      ANDI.L #$0000000F,D1    ;Get last digit (4 bits)
0000127C  0C01 000A                289      CMPI.B #10,D1           ;Compare with 10
00001280  6C00 000C                290      BGE CONVERT_HEX
00001284  0601 0030                291      ADDI.B #$30,D1          ;Convert to 0-9
00001288  4EF9 00001292            292      JMP STORE_ASCII
0000128E                           293  CONVERT_HEX:
0000128E  0601 0037                294      ADDI.B #$37,D1          ;Convert to A-F
00001292                           295  STORE_ASCII:
00001292  1D01                     296      MOVE.B D1, -(A6)        ;Store to Stack(self defined stack)
00001294  E898                     297      ROR.L #4,D0
00001296  5302                     298      SUBI.B #1, D2           ;Count to 0
00001298  66DA                     299      BNE HEX2ASCII_LOOP
0000129A  DDC3                     300      ADD.L D3,A6
0000129C  4CDF 000A                301      MOVEM.L (A7)+, D1/D3
000012A0  4E75                     302      RTS
000012A2                           303      
000012A2                           304  ; Convert ASCII(START FROM A1) to HEX num (Will be storeed in D0) 
000012A2                           305  ; length will be stored in D2
000012A2                           306  ASCII2HEX:
000012A2  48E7 4000                307      MOVEM.L D1,-(A7)
000012A6  4282                     308      CLR.L   D2
000012A8  4281                     309      CLR.L   D1
000012AA  4280                     310      CLR.L   D0
000012AC  0C11 0024                311      CMPI.B #DOLLAR, (A1)    ;Get rid of $ first
000012B0  6600 0004                312      BNE ASCII2HEX_LOOP
000012B4  5249                     313      ADDA #1,A1
000012B6                           314  ASCII2HEX_LOOP:
000012B6  1219                     315      MOVE.B (A1)+,D1
000012B8  0C01 0030                316      CMPI.B #$30,D1     ;0-9
000012BC  6D00 0466                317      BLT SYNTAX_ER
000012C0  0C01 0039                318      CMPI.B #$39,D1
000012C4  6F00 001A                319      BLE ASCII2HEX_NUM 
000012C8  0C01 0046                320      CMPI.B #F_ASC,D1  ;A-F
000012CC  6E00 0456                321      BGT SYNTAX_ER
000012D0  0C01 0041                322      CMPI.B #A_ASC,D1
000012D4  6D00 044E                323      BLT SYNTAX_ER
000012D8  0401 0037                324      SUBI.B #$37,D1
000012DC  6000 0006                325      BRA ASCII2HEX_SUM
000012E0                           326  ASCII2HEX_NUM    
000012E0  0401 0030                327      SUBI.B #$30,D1
000012E4                           328  ASCII2HEX_SUM
000012E4  E998                     329      ROL.L #4,D0    
000012E6  D081                     330      ADD.L D1, D0
000012E8  5202                     331      ADDQ.B #1,D2
000012EA  0C11 0020                332      CMPI.B #SPACE,(A1)  ;If next char is SPACE or NULL end sub routine
000012EE  6700 000C                333      BEQ ASCII2HEX_END   
000012F2  0C11 0000                334      CMPI.B #NULL,(A1)
000012F6  6700 0004                335      BEQ ASCII2HEX_END
000012FA  60BA                     336      BRA ASCII2HEX_LOOP
000012FC                           337  ASCII2HEX_END
000012FC  5242                     338      ADDQ #1,D2          ;CONVERT DIGIT TO BYTE
000012FE  0882 0000                339      BCLR #0,D2
00001302  E29A                     340      ROR.L #1,D2    
00001304  4CDF 0002                341      MOVEM.L (A7)+,D1
00001308  4E75                     342      RTS
0000130A                           343  
0000130A                           344  ;Store input buffer
0000130A                           345  STORE_HIS:
0000130A  48E7 0060                346      MOVEM.L A1/A2,-(A7)
0000130E  43F9 00003000            347      LEA INPUT_BUFF,A1
00001314  45F9 000034AC            348      LEA HISTORY_BUFF,A2
0000131A                           349  STORE_HIST_LOOP:
0000131A  0C11 0000                350      CMPI.B #0,(A1)
0000131E  6700 0006                351      BEQ STORE_HIS_END
00001322  14D9                     352      MOVE.B (A1)+,(A2)+
00001324  60F4                     353      BRA STORE_HIST_LOOP
00001326                           354  STORE_HIS_END:
00001326  14BC 0000                355      MOVE.B #0,(A2)
0000132A  4CDF 0600                356      MOVEM.L (A7)+,A1/A2
0000132E  4E75                     357      RTS  
00001330                           358    
00001330                           359  *----------------COMMAND SUBROUTINE----------------------*
00001330                           360  ;Help
00001330                           361  ;Print help messages for each individual debugger command
00001330                           362  HELP:
00001330  61D8                     363      BSR STORE_HIS 
00001332  4BF9 00001DED            364      LEA MSG_HELP,A5
00001338  4DF9 00001E21            365      LEA MSG_HELP_ED,A6  
0000133E  6100 FD3A                366      BSR PRINT 
00001342  4BF9 00001D7E            367      LEA MSG_CMD_FST,A5
00001348  4DF9 00001DB9            368      LEA MSG_CMD_LST,A6  
0000134E  6100 FD2A                369      BSR PRINT 
00001352                           370  HELP_LOOP:
00001352                           371      ;Print help console prompt
00001352  4BF9 00001D78            372      LEA MSG_CMD_HELP,A5
00001358  4DF9 00001D7C            373      LEA MSG_CMD_HELP_ED,A6
0000135E  1CFC 003E                374      MOVE.B #LARGER,(A6)+
00001362  6100 FD2A                375      BSR PRINT_C
00001366                           376      
00001366                           377      ;User input command to be displayed
00001366  6100 FD3A                378      BSR INPUT
0000136A  43F9 00003000            379      LEA INPUT_BUFF,A1
00001370                           380  
00001370                           381      ;Check if buffer is empty
00001370  0C11 0000                382      CMPI.B #NULL,(A1)
00001374  67DC                     383      BEQ HELP_LOOP
00001376                           384      
00001376                           385      
00001376                           386      ;Block search
00001376  4BF9 00001D7E            387      LEA MSG_CMD_BSCH,A5
0000137C  4DF9 00001D82            388      LEA MSG_CMD_BSCH_ED,A6
00001382  43F9 00003000            389      LEA INPUT_BUFF,A1
00001388  6100 FEB6                390      BSR COMPARE
0000138C  6700 014E                391      BEQ HELP_BSCH
00001390                           392      
00001390                           393      ;Addition
00001390  4BF9 00001D84            394      LEA MSG_CMD_ADD,A5
00001396  4DF9 00001D87            395      LEA MSG_CMD_ADD_ED,A6
0000139C  43F9 00003000            396      LEA INPUT_BUFF,A1
000013A2  6100 FE9C                397      BSR COMPARE
000013A6  6700 0148                398      BEQ HELP_ADD
000013AA                           399  
000013AA                           400      ;And 
000013AA  4BF9 00001D89            401      LEA MSG_CMD_AND,A5
000013B0  4DF9 00001D8C            402      LEA MSG_CMD_AND_ED,A6
000013B6  43F9 00003000            403      LEA INPUT_BUFF,A1
000013BC  6100 FE82                404      BSR COMPARE
000013C0  6700 0142                405      BEQ HELP_AND
000013C4                           406      
000013C4                           407      ;Recall last command
000013C4  4BF9 00001D8E            408      LEA MSG_CMD_RC,A5
000013CA  4DF9 00001D8F            409      LEA MSG_CMD_RC_ED,A6
000013D0  43F9 00003000            410      LEA INPUT_BUFF,A1
000013D6  6100 FE68                411      BSR COMPARE
000013DA  6700 013C                412      BEQ HELP_RC
000013DE                           413      
000013DE                           414      ;MEMORY DISPLAY
000013DE  4BF9 00001D91            415      LEA MSG_CMD_MDSP,A5
000013E4  4DF9 00001D95            416      LEA MSG_CMD_MDSP_ED,A6
000013EA  43F9 00003000            417      LEA INPUT_BUFF,A1
000013F0  6100 FE4E                418      BSR COMPARE
000013F4  6700 0136                419      BEQ HELP_MDSP
000013F8                           420      
000013F8                           421      ;EXIT COMMAND
000013F8  4BF9 00001D97            422      LEA MSG_CMD_EXIT,A5
000013FE  4DF9 00001D9B            423      LEA MSG_CMD_EXIT_ED,A6
00001404  43F9 00003000            424      LEA INPUT_BUFF,A1
0000140A  6100 FE34                425      BSR COMPARE
0000140E  6700 0130                426      BEQ HELP_EXIT_MSG
00001412                           427      
00001412                           428      ;MEMORY MODIFY
00001412  4BF9 00001D9D            429      LEA MSG_CMD_MM,A5
00001418  4DF9 00001D9F            430      LEA MSG_CMD_MM_ED,A6
0000141E  43F9 00003000            431      LEA INPUT_BUFF,A1
00001424  6100 FE1A                432      BSR COMPARE
00001428  6700 012A                433      BEQ HELP_MM_MSG
0000142C                           434      
0000142C                           435      ;MEMORY SET
0000142C  4BF9 00001DA1            436      LEA MSG_CMD_MS,A5
00001432  4DF9 00001DA3            437      LEA MSG_CMD_MS_ED,A6
00001438  43F9 00003000            438      LEA INPUT_BUFF,A1
0000143E  6100 FE00                439      BSR COMPARE
00001442  6700 0124                440      BEQ HELP_MS_MSG
00001446                           441      
00001446                           442      ;BLOCK FILL
00001446  4BF9 00001DA5            443      LEA MSG_CMD_BF,A5
0000144C  4DF9 00001DA7            444      LEA MSG_CMD_BF_ED,A6
00001452  43F9 00003000            445      LEA INPUT_BUFF,A1
00001458  6100 FDE6                446      BSR COMPARE
0000145C  6700 011E                447      BEQ HELP_BF_MSG
00001460                           448      
00001460                           449      ;BLOCK MOVE
00001460  4BF9 00001DA9            450      LEA MSG_CMD_BMOV,A5
00001466  4DF9 00001DAD            451      LEA MSG_CMD_BMOV_ED,A6
0000146C  43F9 00003000            452      LEA INPUT_BUFF,A1
00001472  6100 FDCC                453      BSR COMPARE
00001476  6700 0118                454      BEQ HELP_BMOV_MSG
0000147A                           455      
0000147A                           456      ;BLOCK TEST
0000147A  4BF9 00001DAF            457      LEA MSG_CMD_BT,A5
00001480  4DF9 00001DB1            458      LEA MSG_CMD_BT_ED,A6
00001486  43F9 00003000            459      LEA INPUT_BUFF,A1
0000148C  6100 FDB2                460      BSR COMPARE
00001490  6700 0112                461      BEQ HELP_BT_MSG
00001494                           462      
00001494                           463      ;GO
00001494  4BF9 00001DB3            464      LEA MSG_CMD_GO,A5
0000149A  4DF9 00001DB5            465      LEA MSG_CMD_GO_ED,A6
000014A0  43F9 00003000            466      LEA INPUT_BUFF,A1
000014A6  6100 FD98                467      BSR COMPARE
000014AA  6700 010C                468      BEQ HELP_GO_MSG
000014AE                           469      
000014AE                           470      ;DF
000014AE  4BF9 00001DB7            471      LEA MSG_CMD_DF,A5
000014B4  4DF9 00001DB9            472      LEA MSG_CMD_DF_ED,A6
000014BA  43F9 00003000            473      LEA INPUT_BUFF,A1
000014C0  6100 FD7E                474      BSR COMPARE
000014C4  6700 0106                475      BEQ HELP_DF_MSG
000014C8                           476      
000014C8                           477      ;Exit help console
000014C8  43F9 00003000            478      LEA INPUT_BUFF,A1
000014CE  0C11 0051                479      CMPI.B #Q_ASC,(A1)
000014D2  6700 0006                480      BEQ HELP_EXIT
000014D6  6000 FE58                481      BRA HELP
000014DA                           482  HELP_EXIT:
000014DA  4E75                     483      RTS
000014DC                           484  
000014DC                           485  HELP_BSCH:
000014DC  4BF9 00001F60            486      LEA MSG_HELP_BSCH,A5
000014E2  4DF9 00002012            487      LEA MSG_HELP_BSCH_ED,A6
000014E8  6100 FB90                488      BSR PRINT
000014EC  6000 FE64                489      BRA HELP_LOOP
000014F0                           490  HELP_ADD:
000014F0  4BF9 00002012            491      LEA MSG_HELP_ADD,A5
000014F6  4DF9 00002043            492      LEA MSG_HELP_ADD_ED,A6
000014FC  6100 FB7C                493      BSR PRINT 
00001500  6000 FE50                494      BRA HELP_LOOP
00001504                           495  HELP_AND:
00001504  4BF9 00002043            496      LEA MSG_HELP_AND,A5
0000150A  4DF9 00002074            497      LEA MSG_HELP_AND_ED,A6
00001510  6100 FB68                498      BSR PRINT
00001514  6000 FE3C                499      BRA HELP_LOOP
00001518                           500  HELP_RC:
00001518  4BF9 00002074            501      LEA MSG_HELP_RC,A5
0000151E  4DF9 00002091            502      LEA MSG_HELP_RC_ED,A6
00001524  6100 FB54                503      BSR PRINT
00001528  6000 FE28                504      BRA HELP_LOOP
0000152C                           505  
0000152C                           506  HELP_MDSP:
0000152C  4BF9 00002091            507      LEA MSG_HELP_MDSP,A5
00001532  4DF9 00002119            508      LEA MSG_HELP_MDSP_ED,A6
00001538  6100 FB40                509      BSR PRINT
0000153C  6000 FE14                510      BRA HELP_LOOP
00001540                           511      
00001540                           512  HELP_EXIT_MSG:
00001540  4BF9 00002119            513      LEA MSG_HELP_EXIT,A5
00001546  4DF9 00002138            514      LEA MSG_HELP_EXIT_ED,A6
0000154C  6100 FB2C                515      BSR PRINT
00001550  6000 FE00                516      BRA HELP_LOOP
00001554                           517  
00001554                           518  HELP_MM_MSG:
00001554  4BF9 00002138            519      LEA MSG_HELP_MM,A5
0000155A  4DF9 000021F4            520      LEA MSG_HELP_MM_ED,A6
00001560  6100 FB18                521      BSR PRINT
00001564  6000 FDEC                522      BRA HELP_LOOP
00001568                           523  HELP_MS_MSG:
00001568  4BF9 000021F4            524      LEA MSG_HELP_MS,A5
0000156E  4DF9 000022D2            525      LEA MSG_HELP_MS_ED,A6
00001574  6100 FB04                526      BSR PRINT
00001578  6000 FDD8                527      BRA HELP_LOOP
0000157C                           528  HELP_BF_MSG:
0000157C  4BF9 000022D2            529      LEA MSG_HELP_BF,A5
00001582  4DF9 00002376            530      LEA MSG_HELP_BF_ED,A6
00001588  6100 FAF0                531      BSR PRINT
0000158C  6000 FDC4                532      BRA HELP_LOOP
00001590                           533  HELP_BMOV_MSG:
00001590  4BF9 00002376            534      LEA MSG_HELP_BMOV,A5
00001596  4DF9 000023E1            535      LEA MSG_HELP_BMOV_ED,A6
0000159C  6100 FADC                536      BSR PRINT
000015A0  6000 FDB0                537      BRA HELP_LOOP
000015A4                           538  HELP_BT_MSG:
000015A4  4BF9 000023E1            539      LEA MSG_HELP_BT,A5
000015AA  4DF9 00002433            540      LEA MSG_HELP_BT_ED,A6
000015B0  6100 FAC8                541      BSR PRINT
000015B4  6000 FD9C                542      BRA HELP_LOOP
000015B8                           543  HELP_GO_MSG:
000015B8  4BF9 00002433            544      LEA MSG_HELP_GO,A5
000015BE  4DF9 0000246E            545      LEA MSG_HELP_GO_ED,A6
000015C4  6100 FAB4                546      BSR PRINT
000015C8  6000 FD88                547      BRA HELP_LOOP
000015CC                           548  HELP_DF_MSG:
000015CC  4BF9 0000246E            549      LEA MSG_HELP_DF,A5
000015D2  4DF9 000024B6            550      LEA MSG_HELP_DF_ED,A6
000015D8  6100 FAA0                551      BSR PRINT
000015DC  6000 FD74                552      BRA HELP_LOOP
000015E0                           553  
000015E0                           554  
000015E0                           555  ;Block search
000015E0                           556  BSCH:
000015E0  6100 FD28                557      BSR STORE_HIS
000015E4  0C19 0020                558      CMPI.B #SPACE,(A1)+ ;Get rid of the space after command
000015E8  6600 013A                559      BNE SYNTAX_ER       
000015EC  6100 FCB4                560      BSR ASCII2HEX
000015F0  2640                     561      MOVE.L D0,A3        ;Parse the first address
000015F2  0C19 0020                562      CMPI.B #SPACE,(A1)+ 
000015F6  6600 012C                563      BNE SYNTAX_ER       
000015FA  6100 FCA6                564      BSR ASCII2HEX
000015FE  2840                     565      MOVE.L D0,A4        ;Parse the second address
00001600  B7CC                     566      CMPA.L A4,A3        ;Check if the first address is smalller
00001602  6C00 0120                567      BGE SYNTAX_ER       
00001606  0C19 0020                568      CMPI.B #SPACE,(A1)+ 
0000160A  6600 0118                569      BNE SYNTAX_ER
0000160E  2F09                     570      MOVE.L A1,-(A7)
00001610                           571  BSCH_LOOP_1:
00001610  2257                     572      MOVE.L (A7),A1
00001612  B9CB                     573      CMPA.L A3,A4
00001614  6700 0028                574      BEQ BSCH_FAILD    
00001618  B30B                     575      CMPM.B (A3)+,(A1)+
0000161A  66F4                     576      BNE BSCH_LOOP_1
0000161C  200B                     577      MOVE.L A3,D0
0000161E  5340                     578      SUBQ #1,D0
00001620                           579  BSCH_LOOP_2:
00001620  B9CB                     580      CMPA.L A3,A4
00001622  6D00 001A                581      BLT BSCH_FAILD 
00001626  B30B                     582      CMPM.B (A3)+,(A1)+
00001628  67F6                     583      BEQ BSCH_LOOP_2
0000162A  0C29 0000 FFFF           584      CMPI.B #0,-1(A1)
00001630  6700 0020                585      BEQ BSCH_SUCCESS
00001634  B9CB                     586      CMPA.L A3,A4
00001636  6700 0006                587      BEQ BSCH_FAILD
0000163A  2257                     588      MOVE.L (A7),A1
0000163C  60D2                     589      BRA BSCH_LOOP_1
0000163E                           590  BSCH_FAILD:
0000163E  4BF9 00001E34            591      LEA MSG_BSCH_FAILD,A5
00001644  4DF9 00001E45            592      LEA MSG_BSCH_FAILD_ED,A6
0000164A  6100 FA2E                593      BSR PRINT
0000164E  6000 002A                594      BRA BSCH_END    
00001652                           595  BSCH_SUCCESS:
00001652  4BF9 00001E21            596      LEA MSG_BSCH_SUCCESS,A5
00001658  4DF9 00001E34            597      LEA MSG_BSCH_SUCCESS_ED,A6
0000165E  6100 FA2E                598      BSR PRINT_C
00001662  4DF9 00003256            599      LEA OUTPUT_BUFF,A6
00001668  6100 FC00                600      BSR HEX2ASCII
0000166C  4BF9 00003256            601      LEA OUTPUT_BUFF,A5
00001672  6100 FA06                602      BSR PRINT
00001676  6000 0002                603      BRA BSCH_END
0000167A                           604  BSCH_END:
0000167A  584F                     605      ADDQ #4,A7    
0000167C  4E75                     606      RTS
0000167E                           607  
0000167E                           608  ;Addition
0000167E                           609  ;Add two numbers and display the result
0000167E                           610  ADD:
0000167E  6100 FC8A                611          BSR     STORE_HIS
00001682  0C19 0020                612      CMPI.B  #SPACE,(A1)+ ;Get rid of the space after command
00001686  6600 009C                613      BNE     SYNTAX_ER       
0000168A  6100 FC16                614      BSR     ASCII2HEX
0000168E  2200                     615      MOVE.L  D0,D1        ;Parse the first NUMBER
00001690  0C19 0020                616      CMPI.B  #SPACE,(A1)+ 
00001694  6600 008E                617      BNE     SYNTAX_ER       
00001698  6100 FC08                618      BSR     ASCII2HEX
0000169C  D081                     619      ADD.L   D1,D0
0000169E  7404                     620      MOVE.L  #4,D2
000016A0  2C7C 00003000            621      MOVE.L  #$3000,A6
000016A6  2C4D                     622      MOVE.L  A5,A6
000016A8  6100 FBC0                623      BSR     HEX2ASCII
000016AC  6100 F9CC                624      BSR     PRINT
000016B0  4E75                     625      RTS
000016B2                           626  
000016B2                           627  ;Arithmatic and 
000016B2                           628  ;And two hex number bitwise and display the result
000016B2                           629  AND:
000016B2  6100 FC56                630         BSR     STORE_HIS
000016B6  0C19 0020                631      CMPI.B  #SPACE,(A1)+ ;Get rid of the space after command
000016BA  6600 0068                632      BNE     SYNTAX_ER       
000016BE  6100 FBE2                633      BSR     ASCII2HEX
000016C2  2200                     634      MOVE.L  D0,D1        ;Parse the first NUMBER
000016C4  0C19 0020                635      CMPI.B  #SPACE,(A1)+ 
000016C8  6600 005A                636      BNE     SYNTAX_ER       
000016CC  6100 FBD4                637      BSR     ASCII2HEX
000016D0  C081                     638      AND.L   D1,D0
000016D2  7404                     639      MOVE.L  #4,D2
000016D4  2C7C 00003000            640      MOVE.L  #$3000,A6
000016DA  2C4D                     641      MOVE.L  A5,A6
000016DC  6100 FB8C                642      BSR     HEX2ASCII
000016E0  6100 F998                643      BSR     PRINT
000016E4  4E75                     644      RTS
000016E6                           645  
000016E6                           646  
000016E6                           647  
000016E6                           648  ;Recall last command    
000016E6                           649  RC:
000016E6  45F9 000034AC            650      LEA HISTORY_BUFF,A2
000016EC  0C12 0000                651      CMPI.B #0,(A2)  ;Check if history buffer is empty
000016F0  6600 0014                652      BNE RC_PROCESS
000016F4  4BF9 00001E74            653      LEA MSG_HIS_EMPTY, A5
000016FA  4DF9 00001E89            654      LEA MSG_HIS_EMPTY_ED, A6
00001700  6100 F978                655      BSR PRINT
00001704  4E75                     656      RTS
00001706                           657  RC_PROCESS:
00001706  43F9 00003000            658      LEA INPUT_BUFF, A1
0000170C                           659  RC_LOOP:    
0000170C  0C12 0000                660      CMPI.B #0,(A2)
00001710  12DA                     661      MOVE.B (A2)+,(A1)+
00001712  66F8                     662      BNE RC_LOOP
00001714                           663  RC_END:    
00001714  3C49                     664      MOVE A1,A6
00001716  4BF9 00003000            665      LEA INPUT_BUFF,A5
0000171C  6100 F95C                666      BSR PRINT
00001720  6000 F99E                667      BRA INTERPRETER ;Return to interpreter   
00001724                           668      
00001724                           669  ;Syntax error
00001724                           670  ;Throw an message indicating syntax error
00001724                           671  SYNTAX_ER:
00001724  4BF9 00001E45            672      LEA MSG_WRONG_CMD,A5
0000172A  4DF9 00001E52            673      LEA MSG_WRONG_CMD_ED,A6
00001730  6100 F948                674      BSR PRINT
00001734  4BF9 00001E52            675      LEA MSG_HELP_PROM,A5
0000173A  4DF9 00001E6D            676      LEA MSG_HELP_PROM_ED,A6
00001740  6100 F938                677      BSR PRINT
00001744  6000 F91A                678      BRA MAIN
00001748                           679  
00001748                           680  
00001748                           681  MDSP:
00001748  48E7 FF7E                682      MOVEM.L D0-D7/A1-A6,-(A7)
0000174C  6100 FBBC                683      BSR STORE_HIS
00001750  0C19 0020                684      CMPI.B #SPACE,(A1)+ ;Get rid of the space after command
00001754  66CE                     685      BNE SYNTAX_ER
00001756                           686      
00001756  0C19 0024                687      CMPI.B  #DOLLAR, (A1)+  ;MAKE SURE ADDRESS STARTS WITH '$'
0000175A  66C8                     688      BNE SYNTAX_ER
0000175C  6100 FB44                689      BSR ASCII2HEX
00001760  3640                     690      MOVE.W  D0,A3
00001762                           691      
00001762  0C19 0020                692      CMPI.B #SPACE,(A1)+
00001766  6600 0006                693      BNE ONEMEM
0000176A  6100 006C                694      BSR TWOMEM
0000176E                           695  ONEMEM:
0000176E  7810                     696      MOVE.L  #16,D4      ;COUNTER
00001770                           697  ONEMEMLOOP:
00001770  4DF9 00003256            698      LEA     OUTPUT_BUFF,A6
00001776  1CFC 0024                699      MOVE.B  #DOLLAR,(A6)+
0000177A  4BF9 00003256            700      LEA     OUTPUT_BUFF,A5
00001780  6100 F90C                701      BSR PRINT_C
00001784                           702      
00001784  4DF9 00003256            703      LEA     OUTPUT_BUFF,A6
0000178A  6100 FADE                704      BSR     HEX2ASCII
0000178E  4BF9 00003256            705      LEA     OUTPUT_BUFF,A5
00001794  6100 F8F8                706      BSR PRINT_C
00001798  4240                     707      CLR     D0
0000179A                           708      
0000179A  4DF9 00003256            709      LEA     OUTPUT_BUFF,A6
000017A0  1CFC 0020                710      MOVE.B  #SPACE,(A6)+
000017A4  4BF9 00003256            711      LEA     OUTPUT_BUFF,A5
000017AA  6100 F8E2                712      BSR PRINT_C
000017AE                           713      
000017AE  4DF9 00003256            714      LEA     OUTPUT_BUFF,A6
000017B4  101B                     715      MOVE.B  (A3)+,D0
000017B6  143C 0001                716      MOVE.B  #1,D2
000017BA  6100 FAAE                717      BSR     HEX2ASCII
000017BE  4BF9 00003256            718      LEA     OUTPUT_BUFF,A5
000017C4  6100 F8B4                719      BSR PRINT
000017C8  200B                     720      MOVE.L  A3,D0
000017CA  7402                     721      MOVE.L  #2,D2
000017CC                           722      
000017CC  5344                     723      SUBI    #1,D4
000017CE  6EA0                     724      BGT     ONEMEMLOOP
000017D0  4CDF 7EFF                725      MOVEM.L (A7)+,D0-D7/A1-A6
000017D4  6000 F88A                726      BRA MAIN
000017D8                           727  TWOMEM:
000017D8  2200                     728      MOVE.L  D0,D1
000017DA  0C19 0024                729      CMPI.B  #DOLLAR, (A1)+  ;MAKE SURE ADDRESS STARTS WITH '$'
000017DE  6600 FF44                730      BNE SYNTAX_ER
000017E2  6100 FABE                731      BSR ASCII2HEX
000017E6  B240                     732      CMP     D0,D1
000017E8  6C00 FF3A                733      BGE     SYNTAX_ER
000017EC  3840                     734      MOVE.W  D0,A4
000017EE  200B                     735      MOVE.L  A3,D0
000017F0                           736  
000017F0                           737  TWOMEMLOOP:
000017F0  4DF9 00003256            738      LEA     OUTPUT_BUFF,A6
000017F6  1CFC 0024                739      MOVE.B  #DOLLAR,(A6)+
000017FA  4BF9 00003256            740      LEA     OUTPUT_BUFF,A5
00001800  6100 F88C                741      BSR PRINT_C
00001804                           742      
00001804  4DF9 00003256            743      LEA     OUTPUT_BUFF,A6
0000180A  6100 FA5E                744      BSR     HEX2ASCII
0000180E  4BF9 00003256            745      LEA     OUTPUT_BUFF,A5
00001814  6100 F878                746      BSR PRINT_C
00001818  4240                     747      CLR     D0
0000181A                           748      
0000181A  4DF9 00003256            749      LEA     OUTPUT_BUFF,A6
00001820  1CFC 0020                750      MOVE.B  #SPACE,(A6)+
00001824  4BF9 00003256            751      LEA     OUTPUT_BUFF,A5
0000182A  6100 F862                752      BSR PRINT_C
0000182E                           753      
0000182E  4DF9 00003256            754      LEA     OUTPUT_BUFF,A6
00001834  101B                     755      MOVE.B  (A3)+,D0
00001836  143C 0001                756      MOVE.B  #1,D2
0000183A  6100 FA2E                757      BSR     HEX2ASCII
0000183E  4BF9 00003256            758      LEA     OUTPUT_BUFF,A5
00001844  6100 F834                759      BSR PRINT
00001848  200B                     760      MOVE.L  A3,D0           ;SETS UP NEXT ADDRESS TO PRINT
0000184A  7402                     761      MOVE.L  #2,D2
0000184C                           762      
0000184C  B8CB                     763      CMP     A3,A4
0000184E  6CA0                     764      BGE     TWOMEMLOOP
00001850  4CDF 7EFF                765      MOVEM.L (A7)+,D0-D7/A1-A6
00001854  6000 F80A                766      BRA MAIN
00001858                           767      
00001858                           768  MM:
00001858  6100 FAB0                769      BSR STORE_HIS
0000185C  0C19 0020                770      CMPI.B #SPACE,(A1)+ ;Get rid of the space after command
00001860  6600 FEC2                771      BNE SYNTAX_ER  
00001864  0C19 0024                772      CMPI.B  #DOLLAR, (A1)+  ;MAKE SURE ADDRESS STARTS WITH '$'
00001868  6600 FEBA                773      BNE SYNTAX_ER
0000186C  6100 FA34                774      BSR ASCII2HEX
00001870  2640                     775      MOVE.L  D0,A3
00001872                           776  MMLOOP:
00001872  4DF9 00003256            777      LEA     OUTPUT_BUFF,A6
00001878  1CFC 0024                778      MOVE.B  #DOLLAR,(A6)+
0000187C  4BF9 00003256            779      LEA     OUTPUT_BUFF,A5
00001882  6100 F80A                780      BSR PRINT_C
00001886                           781      
00001886  4DF9 00003256            782      LEA     OUTPUT_BUFF,A6
0000188C  6100 F9DC                783      BSR     HEX2ASCII
00001890  4BF9 00003256            784      LEA     OUTPUT_BUFF,A5
00001896  6100 F7F6                785      BSR PRINT_C
0000189A                           786      
0000189A  6100 04AC                787      BSR PRINT_SPACE
0000189E                           788      
0000189E  4DF9 00003256            789      LEA     OUTPUT_BUFF,A6
000018A4  1013                     790      MOVE.B  (A3),D0
000018A6  143C 0001                791      MOVE.B  #1,D2
000018AA  6100 F9BE                792      BSR     HEX2ASCII
000018AE  4BF9 00003256            793      LEA     OUTPUT_BUFF,A5
000018B4  6100 F7D8                794      BSR PRINT_C    
000018B8  6100 04A4                795      BSR PRINT_COLON
000018BC  6100 F7E4                796      BSR INPUT
000018C0  43F9 00003000            797      LEA INPUT_BUFF,A1
000018C6  0C11 002E                798      CMPI.B  #DOT,(A1)
000018CA  6700 0016                799      BEQ     MMEXIT
000018CE                           800      
000018CE  6100 F9D2                801      BSR ASCII2HEX
000018D2  0C02 0002                802      CMPI.B #2,D2
000018D6  6C00 FE4C                803      BGE SYNTAX_ER
000018DA  16C0                     804      MOVE.B  D0,(A3)+
000018DC  200B                     805      MOVE.L  A3,D0           ;SETS UP NEXT ADDRESS TO PRINT
000018DE  7402                     806      MOVE.L  #2,D2
000018E0  6190                     807      BSR     MMLOOP
000018E2                           808  MMEXIT:
000018E2  4E75                     809      RTS
000018E4                           810      
000018E4                           811  MS:
000018E4  6100 FA24                812      BSR STORE_HIS
000018E8  0C19 0020                813      CMPI.B #SPACE,(A1)+ ;Get rid of the space after command
000018EC  6600 FE36                814      BNE SYNTAX_ER  
000018F0  0C19 0024                815      CMPI.B  #DOLLAR, (A1)+  ;MAKE SURE ADDRESS STARTS WITH '$'
000018F4  6600 FE2E                816      BNE SYNTAX_ER
000018F8  6100 F9A8                817      BSR ASCII2HEX
000018FC  2640                     818      MOVE.L  D0,A3
000018FE  0C19 0020                819      CMPI.B #SPACE,(A1)+     ;Get rid of the space after command
00001902  6600 FE20                820      BNE SYNTAX_ER
00001906  0C11 0024                821      CMPI.B  #DOLLAR, (A1)  
0000190A  6700 0008                822      BEQ MSHEX
0000190E  6100 001C                823      BSR MSSTRING    
00001912  4E75                     824      RTS
00001914                           825  MSHEX:
00001914  5289                     826      ADD.L   #1,A1
00001916  6100 F98A                827      BSR ASCII2HEX
0000191A  0C02 0002                828      CMPI.B  #2,D2
0000191E  6700 001A                829      BEQ     HEXWORD
00001922  6D00 001A                830      BLT     HEXBYTE
00001926  6E00 001A                831      BGT     HEXLW
0000192A  4E75                     832      RTS
0000192C                           833      
0000192C                           834  MSSTRING:
0000192C  0C11 0000                835      CMPI.B  #NULL,(A1)
00001930  6700 0006                836      BEQ STRINGEND
00001934  16D9                     837      MOVE.B  (A1)+,(A3)+
00001936  60F4                     838      BRA MSSTRING
00001938                           839  STRINGEND:
00001938  4E75                     840      RTS
0000193A                           841  HEXWORD:
0000193A  3680                     842      MOVE.W  D0,(A3)
0000193C  4E75                     843      RTS
0000193E                           844  HEXBYTE:
0000193E  1680                     845      MOVE.B  D0,(A3)
00001940  4E75                     846      RTS
00001942                           847  HEXLW:
00001942  2680                     848      MOVE.L  D0,(A3)
00001944  4E75                     849      RTS
00001946                           850  BF:
00001946  48E7 FF18                851      MOVEM.L D0-D7/A3/A4,-(A7)    
0000194A  6100 F9BE                852      BSR STORE_HIS
0000194E  6100 03A8                853      BSR SPACE_CHECK
00001952  6100 0396                854      BSR HEXFROMINPUT
00001956  2200                     855      MOVE.L  D0,D1
00001958  82FC 0002                856      DIVU    #2,D1
0000195C  4841                     857      SWAP    D1
0000195E  0C01 0000                858      CMPI.B  #0,D1
00001962  6600 FDC0                859      BNE     SYNTAX_ER
00001966  2640                     860      MOVE.L  D0,A3
00001968  6100 038E                861      BSR SPACE_CHECK
0000196C  6100 037C                862      BSR HEXFROMINPUT
00001970  2200                     863      MOVE.L  D0,D1
00001972  82FC 0002                864      DIVU    #2,D1
00001976  4841                     865      SWAP    D1
00001978  0C01 0000                866      CMPI.B  #0,D1
0000197C  6600 FDA6                867      BNE     SYNTAX_ER
00001980  2840                     868      MOVE.L  D0,A4
00001982  B9CB                     869      CMPA.L  A3,A4
00001984  6F00 FD9E                870      BLE SYNTAX_ER
00001988  6100 036E                871      BSR SPACE_CHECK
0000198C  6100 035C                872      BSR HEXFROMINPUT
00001990  0C02 0002                873      CMPI.B  #2,D2
00001994  6E00 FD8E                874      BGT     SYNTAX_ER
00001998                           875  BFLOOP:
00001998  36C0                     876      MOVE.W  D0,(A3)+
0000199A  B8CB                     877      CMPA    A3,A4
0000199C  6D00 0004                878      BLT     BFEXIT
000019A0  61F6                     879      BSR     BFLOOP
000019A2                           880  BFEXIT:
000019A2  4CDF 18FF                881      MOVEM.L (A7)+,D0-D7/A3/A4
000019A6  6000 F6B8                882      BRA MAIN   
000019AA                           883  BMOV:
000019AA  6100 F95E                884      BSR STORE_HIS
000019AE  6100 0348                885      BSR SPACE_CHECK
000019B2  6100 0336                886      BSR HEXFROMINPUT
000019B6  2440                     887      MOVE.L  D0,A2
000019B8  6100 033E                888      BSR SPACE_CHECK
000019BC  6100 032C                889      BSR HEXFROMINPUT
000019C0  2640                     890      MOVE.L  D0,A3
000019C2  B7CA                     891      CMPA.L  A2,A3
000019C4  6F00 FD5E                892      BLE     SYNTAX_ER
000019C8  6100 032E                893      BSR SPACE_CHECK
000019CC  6100 031C                894      BSR HEXFROMINPUT
000019D0  2840                     895      MOVE.L  D0,A4
000019D2                           896  BMOV_LOOP:
000019D2  18DA                     897      MOVE.B  (A2)+,(A4)+
000019D4  B7CA                     898      CMPA.L  A2,A3
000019D6  6D00 0004                899      BLT BMOV_EXIT
000019DA  61F6                     900      BSR BMOV_LOOP
000019DC                           901  BMOV_EXIT:   
000019DC  4E75                     902      RTS
000019DE                           903  
000019DE                           904  DF: 
000019DE  48E7 FFFF                905      MOVEM.L D0-D7/A0-A7,-(A7)
000019E2  244F                     906      MOVE.L  A7,A2
000019E4  48E2 0001                907      MOVEM.L A7,-(A2)
000019E8  487A FFFE                908      PEA *(PC)    
000019EC  7404                     909      MOVE.L  #4,D2    
000019EE  4DF9 00003256            910      LEA OUTPUT_BUFF,A6
000019F4  1CFC 0050                911      MOVE.B  #80,(A6)+
000019F8  4BF9 00003256            912      LEA OUTPUT_BUFF,A5
000019FE  6100 F68E                913      BSR PRINT_C
00001A02  4DF9 00003256            914      LEA OUTPUT_BUFF,A6
00001A08  1CFC 0043                915      MOVE.B  #67,(A6)+
00001A0C  6100 F680                916      BSR PRINT_C
00001A10  6100 034C                917      BSR PRINT_COLON
00001A14  201A                     918      MOVE.L  (A2)+,D0
00001A16  4DF9 00003256            919      LEA OUTPUT_BUFF,A6
00001A1C  6100 F84C                920      BSR HEX2ASCII
00001A20  6100 F66C                921      BSR PRINT_C
00001A24  6100 0322                922      BSR PRINT_SPACE
00001A28                           923      
00001A28  7404                     924      MOVE.L  #4,D2
00001A2A  4DF9 00003256            925      LEA OUTPUT_BUFF,A6
00001A30  1CFC 0053                926      MOVE.B  #83,(A6)+
00001A34  6100 F658                927      BSR PRINT_C
00001A38  4DF9 00003256            928      LEA OUTPUT_BUFF,A6
00001A3E  1CFC 0052                929      MOVE.B  #82,(A6)+
00001A42  6100 F64A                930      BSR PRINT_C
00001A46  6100 0316                931      BSR PRINT_COLON
00001A4A  40C0                     932      MOVE    SR,D0
00001A4C  4DF9 00003256            933      LEA OUTPUT_BUFF,A6
00001A52  6100 F816                934      BSR HEX2ASCII
00001A56  6100 F636                935      BSR PRINT_C
00001A5A  6100 02EC                936      BSR PRINT_SPACE
00001A5E                           937      
00001A5E  7404                     938      MOVE.L  #4,D2
00001A60  4DF9 00003256            939      LEA OUTPUT_BUFF,A6
00001A66  1CFC 0055                940      MOVE.B  #85,(A6)+
00001A6A  6100 F622                941      BSR PRINT_C
00001A6E  4DF9 00003256            942      LEA OUTPUT_BUFF,A6
00001A74  1CFC 0053                943      MOVE.B  #83,(A6)+
00001A78  6100 F614                944      BSR PRINT_C
00001A7C  6100 02E0                945      BSR PRINT_COLON
00001A80  4E6B                     946      MOVE    USP,A3
00001A82  200B                     947      MOVE.L  A3,D0
00001A84  4DF9 00003256            948      LEA OUTPUT_BUFF,A6
00001A8A  6100 F7DE                949      BSR HEX2ASCII
00001A8E  6100 F5FE                950      BSR PRINT_C
00001A92  6100 02B4                951      BSR PRINT_SPACE
00001A96                           952      
00001A96  7404                     953      MOVE.L  #4,D2
00001A98  4DF9 00003256            954      LEA OUTPUT_BUFF,A6
00001A9E  1CFC 0053                955      MOVE.B  #83,(A6)+
00001AA2  6100 F5EA                956      BSR PRINT_C
00001AA6  4DF9 00003256            957      LEA OUTPUT_BUFF,A6
00001AAC  1CFC 0053                958      MOVE.B  #83,(A6)+
00001AB0  6100 F5DC                959      BSR PRINT_C
00001AB4  6100 02A8                960      BSR PRINT_COLON
00001AB8  201A                     961      MOVE.L  (A2)+,D0
00001ABA  4DF9 00003256            962      LEA OUTPUT_BUFF,A6
00001AC0  6100 F7A8                963      BSR HEX2ASCII
00001AC4  6100 F5C8                964      BSR PRINT_C
00001AC8  6100 0238                965      BSR PRINT_CR_LF 
00001ACC  4CDF FFFF                966      MOVEM.L (A7)+,D0-D7/A0-A7   
00001AD0                           967  DF_D:
00001AD0  48E7 FFFF                968      MOVEM.L D0-D7/A0-A7,-(A7)
00001AD4  244F                     969      MOVE.L A7,A2
00001AD6  163C 0030                970      MOVE.B  #48,D3
00001ADA  1E3C 0007                971      MOVE.B  #7,D7
00001ADE                           972  DF_D_LOOP:
00001ADE  6100 023C                973      BSR PRINT_D
00001AE2  4DF9 00003256            974      LEA OUTPUT_BUFF,A6
00001AE8  1CC3                     975      MOVE.B  D3,(A6)+
00001AEA  4BF9 00003256            976      LEA OUTPUT_BUFF,A5
00001AF0  6100 F59C                977      BSR PRINT_C
00001AF4  6100 0268                978      BSR PRINT_COLON
00001AF8                           979      
00001AF8  201A                     980      MOVE.L  (A2)+,D0
00001AFA  143C 0004                981      MOVE.B  #4,D2
00001AFE  4DF9 00003256            982      LEA OUTPUT_BUFF,A6
00001B04  6100 F764                983      BSR HEX2ASCII
00001B08  4BF9 00003256            984      LEA OUTPUT_BUFF,A5
00001B0E  6100 F57E                985      BSR PRINT_C
00001B12  6100 0234                986      BSR PRINT_SPACE      
00001B16  5347                     987      SUBI    #1,D7
00001B18  6D00 0028                988      BLT     DF_A       
00001B1C  5243                     989      ADDI    #1,D3
00001B1E  0C07 0003                990      CMPI.B  #3,D7
00001B22  6700 0004                991      BEQ     DF_D_NEWLINE
00001B26  60B6                     992      BRA     DF_D_LOOP
00001B28                           993  DF_D_NEWLINE:
00001B28  4DF9 00003256            994      LEA OUTPUT_BUFF,A6
00001B2E  1CFC 000D                995      MOVE.B  #CR,(A6)+
00001B32  1CFC 000A                996      MOVE.B  #LF,(A6)+
00001B36  4BF9 00003256            997      LEA OUTPUT_BUFF,A5
00001B3C  6100 F550                998      BSR PRINT_C
00001B40  609C                     999      BRA     DF_D_LOOP
00001B42                          1000  DF_A:
00001B42  6100 01BE               1001      BSR PRINT_CR_LF
00001B46  143C 0004               1002      MOVE.B  #4,D2
00001B4A  163C 0030               1003      MOVE.B  #48,D3
00001B4E  7E07                    1004      MOVE.L  #7,D7
00001B50                          1005  DF_A_LOOP:
00001B50  6100 01E0               1006      BSR PRINT_A
00001B54  4DF9 00003256           1007      LEA OUTPUT_BUFF,A6
00001B5A  1CC3                    1008      MOVE.B  D3,(A6)+
00001B5C  4BF9 00003256           1009      LEA OUTPUT_BUFF,A5
00001B62  6100 F52A               1010      BSR PRINT_C
00001B66  6100 01F6               1011      BSR PRINT_COLON
00001B6A                          1012      
00001B6A  201A                    1013      MOVE.L  (A2)+,D0
00001B6C  143C 0004               1014      MOVE.B  #4,D2
00001B70  4DF9 00003256           1015      LEA OUTPUT_BUFF,A6
00001B76  6100 F6F2               1016      BSR HEX2ASCII
00001B7A  4BF9 00003256           1017      LEA OUTPUT_BUFF,A5
00001B80  6100 F50C               1018      BSR PRINT_C
00001B84  6100 01C2               1019      BSR PRINT_SPACE      
00001B88  5347                    1020      SUBI    #1,D7
00001B8A  6D00 0028               1021      BLT     DFEND    
00001B8E  5243                    1022      ADDI    #1,D3
00001B90  0C07 0003               1023      CMPI.B  #3,D7
00001B94  6700 0004               1024      BEQ     DF_A_NEWLINE
00001B98  60B6                    1025      BRA     DF_A_LOOP
00001B9A                          1026      
00001B9A                          1027  DF_A_NEWLINE:
00001B9A  4DF9 00003256           1028      LEA OUTPUT_BUFF,A6
00001BA0  1CFC 000D               1029      MOVE.B  #CR,(A6)+
00001BA4  1CFC 000A               1030      MOVE.B  #LF,(A6)+
00001BA8  4BF9 00003256           1031      LEA OUTPUT_BUFF,A5
00001BAE  6100 F4DE               1032      BSR PRINT_C
00001BB2  609C                    1033      BRA     DF_A_LOOP
00001BB4                          1034  
00001BB4                          1035  DFEND:
00001BB4  6100 014C               1036      BSR PRINT_CR_LF
00001BB8  4CDF FF03               1037      MOVEM.L (A7)+,D0-D1/A0-A7
00001BBC  6000 F4A2               1038      BRA MAIN
00001BC0                          1039  
00001BC0                          1040  
00001BC0                          1041  BT:
00001BC0  48E7 FF18               1042      MOVEM.L D0-D7/A3/A4,-(A7)    
00001BC4  6100 F744               1043      BSR STORE_HIS
00001BC8  6100 012E               1044      BSR SPACE_CHECK
00001BCC  6100 011C               1045      BSR HEXFROMINPUT
00001BD0  2200                    1046      MOVE.L  D0,D1
00001BD2  82FC 0002               1047      DIVU    #2,D1
00001BD6  4841                    1048      SWAP    D1
00001BD8  0C01 0000               1049      CMPI.B  #0,D1
00001BDC  6600 FB46               1050      BNE     SYNTAX_ER
00001BE0  2640                    1051      MOVE.L  D0,A3
00001BE2  244B                    1052      MOVE.L  A3,A2
00001BE4  6100 0112               1053      BSR SPACE_CHECK
00001BE8  6100 0100               1054      BSR HEXFROMINPUT
00001BEC  2200                    1055      MOVE.L  D0,D1
00001BEE  82FC 0002               1056      DIVU    #2,D1
00001BF2  4841                    1057      SWAP    D1
00001BF4  0C01 0000               1058      CMPI.B  #0,D1
00001BF8  6600 FB2A               1059      BNE     SYNTAX_ER
00001BFC  2840                    1060      MOVE.L  D0,A4
00001BFE  B9CB                    1061      CMPA.L  A3,A4
00001C00  6F00 FB22               1062      BLE SYNTAX_ER
00001C04  103C 00AA               1063      MOVE.B  #$AA,D0
00001C08                          1064  BT_FILL_LOOP:
00001C08  16C0                    1065      MOVE.B  D0,(A3)+
00001C0A  B8CB                    1066      CMPA    A3,A4
00001C0C  6CFA                    1067      BGE     BT_FILL_LOOP
00001C0E  264A                    1068      MOVE.L  A2,A3
00001C10  2E3C 000000AA           1069      MOVE.L  #$AA,D7
00001C16  6100 0002               1070      BSR     BT_1
00001C1A                          1071  BT_1:
00001C1A  0C13 00AA               1072      CMPI.B  #$AA,(A3)
00001C1E  6600 003A               1073      BNE     BT_ERROR
00001C22  6100 000E               1074      BSR     LOAD_55
00001C26  B9CB                    1075      CMPA.L  A3,A4
00001C28  6CF0                    1076      BGE     BT_1
00001C2A  264A                    1077      MOVE.L  A2,A3
00001C2C  7E55                    1078      MOVE.L  #$55,D7
00001C2E  6100 0008               1079      BSR     BT_2
00001C32                          1080  LOAD_55:
00001C32  16FC 0055               1081      MOVE.B  #$55,(A3)+
00001C36  4E75                    1082      RTS
00001C38                          1083      
00001C38                          1084  BT_2:
00001C38  0C13 0055               1085      CMPI.B  #$55,(A3)
00001C3C  6600 001C               1086      BNE     BT_ERROR
00001C40  6100 000A               1087      BSR     LOAD_AA
00001C44  B9CB                    1088      CMPA.L  A3,A4
00001C46  6CF0                    1089      BGE     BT_2
00001C48  6100 0078               1090      BSR     BT_PASS
00001C4C                          1091  LOAD_AA:
00001C4C  16FC 00AA               1092      MOVE.B  #$AA,(A3)+
00001C50  4E75                    1093      RTS
00001C52                          1094  
00001C52  4CDF 18FF               1095      MOVEM.L (A7)+,D0-D7/A3/A4
00001C56  6000 F408               1096      BRA MAIN   
00001C5A                          1097  BT_ERROR:
00001C5A  4BF9 00001E9B           1098      LEA MSG_BT_FAIL,A5
00001C60  4DF9 00001EAD           1099      LEA MSG_BT_FAIL_ED,A6
00001C66  6100 F412               1100      BSR PRINT
00001C6A  200B                    1101      MOVE.L  A3,D0
00001C6C  7404                    1102      MOVE.L  #4,D2
00001C6E  4DF9 00003256           1103      LEA OUTPUT_BUFF,A6
00001C74  6100 F5F4               1104      BSR HEX2ASCII
00001C78  4BF9 00003256           1105      LEA OUTPUT_BUFF,A5
00001C7E  6100 F40E               1106      BSR PRINT_C
00001C82  6100 00C4               1107      BSR PRINT_SPACE
00001C86                          1108      
00001C86  1013                    1109      MOVE.B  (A3),D0
00001C88  7401                    1110      MOVE.L  #1,D2
00001C8A  4DF9 00003256           1111      LEA OUTPUT_BUFF,A6
00001C90  6100 F5D8               1112      BSR HEX2ASCII
00001C94  4BF9 00003256           1113      LEA OUTPUT_BUFF,A5
00001C9A  6100 F3F2               1114      BSR PRINT_C
00001C9E  6100 00A8               1115      BSR PRINT_SPACE
00001CA2                          1116      
00001CA2  2007                    1117      MOVE.L  D7,D0
00001CA4  7401                    1118      MOVE.L  #1,D2
00001CA6  4DF9 00003256           1119      LEA OUTPUT_BUFF,A6
00001CAC  6100 F5BC               1120      BSR HEX2ASCII
00001CB0  4BF9 00003256           1121      LEA OUTPUT_BUFF,A5
00001CB6  6100 F3C2               1122      BSR PRINT
00001CBA                          1123      
00001CBA  4CDF 18FF               1124      MOVEM.L (A7)+,D0-D7/A3/A4
00001CBE  6000 F3A0               1125      BRA MAIN
00001CC2                          1126  BT_PASS:
00001CC2  4BF9 00001E89           1127      LEA MSG_BT_PASS,A5
00001CC8  4DF9 00001E9B           1128      LEA MSG_BT_PASS_ED,A6
00001CCE  6100 F3AA               1129      BSR PRINT
00001CD2  4CDF 18FF               1130      MOVEM.L (A7)+,D0-D7/A3/A4
00001CD6  6000 F388               1131      BRA MAIN
00001CDA                          1132  GO:
00001CDA  6100 F62E               1133      BSR STORE_HIS
00001CDE  6100 0018               1134      BSR SPACE_CHECK
00001CE2  6100 0006               1135      BSR HEXFROMINPUT
00001CE6  2440                    1136      MOVE.L  D0,A2
00001CE8  4ED2                    1137      JMP (A2)
00001CEA                          1138      
00001CEA                          1139  
00001CEA                          1140  HEXFROMINPUT:
00001CEA  0C19 0024               1141      CMPI.B  #DOLLAR, (A1)+  ;MAKE SURE ADDRESS STARTS WITH '$'
00001CEE  6600 FA34               1142      BNE SYNTAX_ER
00001CF2  6100 F5AE               1143      BSR ASCII2HEX
00001CF6  4E75                    1144      RTS
00001CF8                          1145  SPACE_CHECK:
00001CF8  0C19 0020               1146      CMPI.B #SPACE,(A1)+ ;Get rid of the space after command
00001CFC  6600 FA26               1147      BNE SYNTAX_ER
00001D00  4E75                    1148      RTS
00001D02                          1149  PRINT_CR_LF:    
00001D02  4DF9 00003256           1150      LEA OUTPUT_BUFF,A6
00001D08  1CFC 000D               1151      MOVE.B  #CR,(A6)+
00001D0C  1CFC 000A               1152      MOVE.B  #LF,(A6)+
00001D10  4BF9 00003256           1153      LEA OUTPUT_BUFF,A5
00001D16  6100 F376               1154      BSR PRINT_C
00001D1A  4E75                    1155      RTS
00001D1C                          1156  PRINT_D:
00001D1C  4DF9 00003256           1157      LEA OUTPUT_BUFF,A6
00001D22  1CFC 0044               1158      MOVE.B  #D_ASC,(A6)+
00001D26  4BF9 00003256           1159      LEA OUTPUT_BUFF,A5
00001D2C  6100 F360               1160      BSR PRINT_C
00001D30  4E75                    1161      RTS
00001D32                          1162  PRINT_A:
00001D32  4DF9 00003256           1163      LEA OUTPUT_BUFF,A6
00001D38  1CFC 0041               1164      MOVE.B  #A_ASC,(A6)+
00001D3C  4BF9 00003256           1165      LEA OUTPUT_BUFF,A5
00001D42  6100 F34A               1166      BSR PRINT_C
00001D46  4E75                    1167      RTS
00001D48                          1168  
00001D48                          1169  PRINT_SPACE:
00001D48  4DF9 00003256           1170      LEA     OUTPUT_BUFF,A6
00001D4E  1CFC 0020               1171      MOVE.B  #SPACE,(A6)+
00001D52  4BF9 00003256           1172      LEA     OUTPUT_BUFF,A5
00001D58  6100 F334               1173      BSR PRINT_C
00001D5C  4E75                    1174      RTS
00001D5E                          1175  PRINT_COLON:
00001D5E  4DF9 00003256           1176      LEA     OUTPUT_BUFF,A6
00001D64  1CFC 003A               1177      MOVE.B  #COLON,(A6)+
00001D68  4BF9 00003256           1178      LEA     OUTPUT_BUFF,A5
00001D6E  6100 F31E               1179      BSR PRINT_C
00001D72  4E75                    1180      RTS
00001D74                          1181  
00001D74                          1182      
00001D74                          1183  
00001D74                          1184   
00001D74                          1185  EXIT: 
00001D74                          1186  * Put program code here
00001D74                          1187  
00001D74  FFFF FFFF               1188      SIMHALT             ; halt simulator
00001D78                          1189  
00001D78                          1190  * Put variables and constants here
00001D78                          1191  
00001D78                          1192  *----------------COMMON SYMBOLS--------------------------*
00001D78  =00000256               1193  BUFFSIZE    EQU     $256    ;BUFF SIZE IS EQUAL TO $256
00001D78  =00000020               1194  SPACE       EQU     $20     ;SPACE IN ASCII
00001D78  =0000000D               1195  CR          EQU     $0D     ;CARRIGE RETURN IN ASCII
00001D78  =0000000A               1196  LF          EQU     $0A     ;LINE FEED IN ASCII
00001D78  =00000000               1197  NULL        EQU     $00     ;NULL
00001D78  =0000003A               1198  COLON       EQU     $3A     ; : IN ASCII
00001D78  =0000002C               1199  COMMA       EQU     $2C     ; , IN ASCII
00001D78  =0000002E               1200  DOT         EQU     $2E     ; . IN ASCII
00001D78  =00000024               1201  DOLLAR      EQU     $24     ; $ IN ASCII
00001D78  =00000041               1202  A_ASC       EQU     'A'
00001D78  =00000042               1203  B_ASC       EQU     'B'
00001D78  =00000044               1204  D_ASC       EQU     'D'
00001D78  =00000046               1205  F_ASC       EQU     'F'
00001D78  =00000047               1206  G_ASC       EQU     'G'
00001D78  =00000048               1207  H_ASC       EQU     'H'
00001D78  =0000004C               1208  L_ASC       EQU     'L'
00001D78  =0000004D               1209  M_ASC       EQU     'M'
00001D78  =00000051               1210  Q_ASC       EQU     'Q'
00001D78  =00000053               1211  S_ASC       EQU     'S'
00001D78  =00000057               1212  W_ASC       EQU     'W'
00001D78  =0000003E               1213  LARGER      EQU     '>'
00001D78                          1214  
00001D78                          1215  *---------------COMMAND MESSAGES------------------*
00001D78= 48 45 4C 50             1216  MSG_CMD_HELP    DC.B    'HELP'
00001D7C                          1217  MSG_CMD_HELP_ED:   
00001D7C= 0D 0A                   1218      DC.B    CR,LF 
00001D7E                          1219  MSG_CMD_FST:
00001D7E= 42 53 43 48             1220  MSG_CMD_BSCH    DC.B    'BSCH'
00001D82                          1221  MSG_CMD_BSCH_ED:
00001D82= 0D 0A                   1222      DC.B    CR,LF
00001D84= 41 44 44                1223  MSG_CMD_ADD     DC.B    'ADD'
00001D87                          1224  MSG_CMD_ADD_ED:
00001D87= 0D 0A                   1225      DC.B    CR,LF
00001D89= 41 4E 44                1226  MSG_CMD_AND     DC.B    'AND'
00001D8C                          1227  MSG_CMD_AND_ED:
00001D8C= 0D 0A                   1228      DC.B    CR,LF
00001D8E= 3C                      1229  MSG_CMD_RC     DC.B    '<'
00001D8F                          1230  MSG_CMD_RC_ED:
00001D8F= 0D 0A                   1231      DC.B    CR,LF
00001D91= 4D 44 53 50             1232  MSG_CMD_MDSP    DC.B    'MDSP'
00001D95                          1233  MSG_CMD_MDSP_ED:
00001D95= 0D 0A                   1234      DC.B    CR,LF
00001D97= 45 58 49 54             1235  MSG_CMD_EXIT    DC.B    'EXIT'
00001D9B                          1236  MSG_CMD_EXIT_ED:
00001D9B= 0D 0A                   1237      DC.B    CR,LF
00001D9D= 4D 4D                   1238  MSG_CMD_MM      DC.B    'MM'
00001D9F                          1239  MSG_CMD_MM_ED:
00001D9F= 0D 0A                   1240      DC.B    CR,LF
00001DA1= 4D 53                   1241  MSG_CMD_MS      DC.B    'MS'
00001DA3                          1242  MSG_CMD_MS_ED:
00001DA3= 0D 0A                   1243      DC.B    CR,LF
00001DA5= 42 46                   1244  MSG_CMD_BF      DC.B    'BF'
00001DA7                          1245  MSG_CMD_BF_ED:
00001DA7= 0D 0A                   1246      DC.B    CR,LF
00001DA9= 42 4D 4F 56             1247  MSG_CMD_BMOV    DC.B    'BMOV'
00001DAD                          1248  MSG_CMD_BMOV_ED:
00001DAD= 0D 0A                   1249      DC.B    CR,LF
00001DAF= 42 54                   1250  MSG_CMD_BT    DC.B    'BT'
00001DB1                          1251  MSG_CMD_BT_ED:
00001DB1= 0D 0A                   1252      DC.B    CR,LF
00001DB3= 47 4F                   1253  MSG_CMD_GO      DC.B    'GO'
00001DB5                          1254  MSG_CMD_GO_ED:
00001DB5= 0D 0A                   1255      DC.B    CR,LF
00001DB7= 44 46                   1256  MSG_CMD_DF      DC.B    'DF'
00001DB9                          1257  MSG_CMD_DF_ED:
00001DB9                          1258  
00001DB9                          1259  MSG_CMD_LST:
00001DB9                          1260  
00001DB9                          1261  *----------------COMMON MESSAGES------------------*
00001DB9                          1262  MSG_WELCOME:
00001DB9= 53 79 73 74 65 6D ...   1263      DC.B 'System initiallied. Please input command.' 
00001DE2                          1264  MSG_WELCOME_ED
00001DE2                          1265  MSG_PROM:
00001DE2= 4D 4F 4E 49 54 4F ...   1266      DC.B 'MONITOR441>'
00001DED                          1267  MSG_PROM_ED
00001DED                          1268  MSG_HELP:
00001DED= 45 6E 74 65 72 20 ...   1269      DC.B    'Enter the command you need help.'
00001E0D= 0D 0A 50 72 65 73 ...   1270      DC.B    CR,LF,'Press "Q" to exit.'
00001E21                          1271  MSG_HELP_ED
00001E21                          1272  MSG_BSCH_SUCCESS:
00001E21= 43 6F 6E 74 65 6E ...   1273      DC.B 'Content found at: $'
00001E34                          1274  MSG_BSCH_SUCCESS_ED
00001E34                          1275  MSG_BSCH_FAILD:
00001E34= 43 6F 6E 74 65 6E ...   1276      DC.B 'Content not found'
00001E45                          1277  MSG_BSCH_FAILD_ED
00001E45                          1278  MSG_WRONG_CMD:
00001E45= 57 72 6F 6E 67 20 ...   1279      DC.B 'Wrong command'
00001E52                          1280  MSG_WRONG_CMD_ED
00001E52                          1281  MSG_HELP_PROM:
00001E52= 45 6E 74 65 72 20 ...   1282      DC.B    'Enter "HELP" for help info.'
00001E6D                          1283  MSG_HELP_PROM_ED
00001E6D                          1284  MSG_FINISH:
00001E6D= 46 69 6E 73 68 65 64    1285      DC.B 'Finshed'
00001E74                          1286  MSG_FINISH_ED
00001E74                          1287  MSG_HIS_EMPTY:
00001E74= 4E 6F 20 63 6F 6D ...   1288      DC.B 'No command to recall.'
00001E89                          1289  MSG_HIS_EMPTY_ED
00001E89                          1290  MSG_BT_PASS:
00001E89= 4D 45 4D 4F 52 59 ...   1291      DC.B    'MEMORY TEST PASSES'
00001E9B                          1292  MSG_BT_PASS_ED
00001E9B                          1293  MSG_BT_FAIL:
00001E9B= 4D 45 4D 4F 52 59 ...   1294      DC.B    'MEMORY TEST FAILED'
00001EAD                          1295  MSG_BT_FAIL_ED
00001EAD                          1296  
00001EAD                          1297  MSG_BUS_ER:
00001EAD= 42 55 53 20 45 52 ...   1298      DC.B    'BUS ERROR EXCEPTION'
00001EC0                          1299  MSG_BUS_ER_ED
00001EC0                          1300  
00001EC0                          1301  MSG_ADDR_ER:
00001EC0= 41 44 44 52 45 53 ...   1302      DC.B    'ADDRESS ERROR EXCEPTION'
00001ED7                          1303  MSG_ADDR_ER_ED
00001ED7                          1304  MSG_ILL_ER:
00001ED7= 49 4C 4C 45 47 41 ...   1305      DC.B    'ILLEGAL INSTRUCTION EXCEPTION'
00001EF4                          1306  MSG_ILL_ER_ED
00001EF4                          1307  MSG_PRIVILEGE_ER:
00001EF4= 50 52 49 56 49 4C ...   1308      DC.B    'PRIVILEGE VIOLATION EXCEPTION'
00001F11                          1309  MSG_PRIVILEGE_ER_ED
00001F11                          1310  
00001F11                          1311  MSG_0_ER:
00001F11= 44 49 56 49 44 45 ...   1312      DC.B    'DIVIDE BY ZERO EXCEPTION'
00001F29                          1313  MSG_0_ER_ED
00001F29                          1314  
00001F29                          1315  MSG_CHK_ER:
00001F29= 43 48 4B 20 49 4E ...   1316      DC.B    'CHK INSTRUCTION EXCEPTION'
00001F42                          1317  MSG_CHK_ER_ED
00001F42                          1318  
00001F42                          1319  MSG_LINE_A_ER:
00001F42= 4C 49 4E 45 20 41 ...   1320      DC.B    'LINE A EMULATOR'
00001F51                          1321  MSG_LINE_A_ER_ED
00001F51                          1322  
00001F51                          1323  MSG_LINE_F_ER:
00001F51= 4C 49 4E 45 20 46 ...   1324      DC.B    'LINE F EMULATOR'
00001F60                          1325  MSG_LINE_F_ER_ED
00001F60                          1326  *--------------HELP MESSAGES----------------------*
00001F60                          1327  
00001F60                          1328  ;Block search
00001F60                          1329  MSG_HELP_BSCH:
00001F60= 53 65 61 72 63 68 ...   1330      DC.B    'Search for specific pattern (input as string) within',CR,LF 
00001F96= 61 20 6D 65 6D 6F ...   1331      DC.B    'a memory range. If found, pint the location of such'
00001FC9= 73 74 72 69 6E 67 ...   1332      DC.B    'string, if not found print failed promotion.',CR,LF 
00001FF7= 42 53 43 48 20 3C ...   1333      DC.B    'BSCH <addr1> <addr2> string'
00002012                          1334  MSG_HELP_BSCH_ED
00002012                          1335  
00002012                          1336  ;Addition
00002012                          1337  MSG_HELP_ADD:
00002012= 41 64 64 73 20 74 ...   1338      DC.B    'Adds two hex numbers together.',CR,LF
00002032= 41 44 44 20 3C 4E ...   1339      DC.B    'ADD <Num1> <Num2>'
00002043                          1340  MSG_HELP_ADD_ED
00002043                          1341  
00002043                          1342  ;And
00002043                          1343  MSG_HELP_AND:
00002043= 41 6E 64 73 20 74 ...   1344      DC.B    'Ands two hex numbers together.',CR,LF
00002063= 41 4E 44 20 3C 4E ...   1345      DC.B    'AND <NUM1> <NUM2>'
00002074                          1346  MSG_HELP_AND_ED
00002074                          1347  
00002074                          1348  
00002074                          1349  ;Recall command
00002074                          1350  MSG_HELP_RC:
00002074= 52 65 64 6F 20 6C ...   1351      DC.B    'Redo last correct command.',CR,LF 
00002090= 3C                      1352      DC.B    '<'
00002091                          1353  MSG_HELP_RC_ED:
00002091                          1354  
00002091                          1355  ;MEMORY DISPLAY
00002091                          1356  MSG_HELP_MDSP:
00002091= 44 69 73 70 6C 61 ...   1357      DC.B    'Display memory in address range or will',CR,LF
000020BA= 64 69 70 6C 61 79 ...   1358      DC.B    'diplay 16 bytes from single address',CR,LF
000020DF= 4D 44 53 50 20 3C ...   1359      DC.B    'MDSP <addr1> <addr2>',CR,LF
000020F5= 20 20 20 20 20 20 ...   1360      DC.B    '           OR       ',CR,LF
0000210B= 4D 44 53 50 20 3C ...   1361      DC.B    'MDSP <addr1>',CR,LF
00002119                          1362  MSG_HELP_MDSP_ED:
00002119                          1363  
00002119                          1364  ;EXIT
00002119                          1365  MSG_HELP_EXIT:
00002119= 45 58 49 54 53 20 ...   1366      DC.B    'EXITS THE MONITOR PROGRAM',CR,LF
00002134= 45 58 49 54             1367      DC.B    'EXIT'
00002138                          1368  MSG_HELP_EXIT_ED:
00002138                          1369  
00002138                          1370  ;MEMORY MODIFY
00002138                          1371  MSG_HELP_MM:
00002138= 41 4C 4C 4F 57 53 ...   1372      DC.B    'ALLOWS MODIFICATION OF MEMORY ONE BYTE AT A TIME',CR,LF
0000216A= 44 49 53 50 4C 41 ...   1373      DC.B    'DISPLAYS CURRENT MEMORY LOCATION THEN WAITS FOR INPUT',CR,LF
000021A1= 49 4E 50 55 54 20 ...   1374      DC.B    'INPUT MUST BE A HEX NUMBER, 2 DIGITS MAX',CR,LF
000021CB= 54 59 50 45 20 22 ...   1375      DC.B    'TYPE "." WHEN FINISHED TO QUIT',CR,LF
000021EB= 4D 4D 20 3C 61 64 ...   1376      DC.B    'MM <addr>'
000021F4                          1377  MSG_HELP_MM_ED:
000021F4                          1378  
000021F4                          1379  ;MEMORY SET
000021F4                          1380  MSG_HELP_MS:    
000021F4= 53 45 54 53 20 4D ...   1381      DC.B    'SETS MEMORY IN GIVEN LOCATION. INPUT CAN BE IN HEX OR ASCII FORMAT.',CR,LF
00002239= 48 45 58 20 49 4E ...   1382      DC.B    'HEX INPUT MUST START WITH A "$" AND IS WRITTEN AS: BYTE, WORD, LONG',CR,LF
0000227E= 44 45 50 45 4E 44 ...   1383      DC.B    'DEPENDING ON THE LENGTH OF THE NUMBER, LONG WORD MAX',CR,LF
000022B4= 4D 53 20 3C 61 64 ...   1384      DC.B    'MS <addr> <input to be stored>'
000022D2                          1385  MSG_HELP_MS_ED:
000022D2                          1386  
000022D2                          1387  ;BLOCK FILL
000022D2                          1388  MSG_HELP_BF:
000022D2= 46 49 4C 4C 53 20 ...   1389      DC.B    'FILLS A BLOCK OF MEMORY FROM ONE ADDRESS THROUGH ENDING ADDRESS',CR,LF
00002313= 57 49 54 48 20 41 ...   1390      DC.B    'WITH A HEX NUMBER IN WORD FORMAT. NUMBER CAN NOT BE LARGER THAN A WORD.',CR,LF
0000235C= 42 46 20 3C 61 64 ...   1391      DC.B    'BF <addr1> <addr2> <input>'
00002376                          1392  MSG_HELP_BF_ED:
00002376                          1393  
00002376                          1394  ;BLOCK MOVE
00002376                          1395  MSG_HELP_BMOV:
00002376= 43 4F 50 49 45 53 ...   1396      DC.B    'COPIES A BLOCK OF MEMORY BETWEEN A GIVEN RANGE TO ANOTHER LOCATION.',CR,LF
000023BB= 42 4D 4F 56 20 3C ...   1397      DC.B    'BMOV <addr1> <addr2> <addr to move to>'
000023E1                          1398  MSG_HELP_BMOV_ED:
000023E1                          1399  
000023E1                          1400  ;BLOCK TEST
000023E1                          1401  MSG_HELP_BT:
000023E1= 41 20 44 45 53 54 ...   1402      DC.B    'A DESTRUCTIVE TEST OF A BLOCK OF MEMORY BEWEEN ADDR1 AND ADDR2',CR,LF
00002421= 42 54 20 3C 61 64 ...   1403      DC.B    'BT <addr1> <addr2>'
00002433                          1404  MSG_HELP_BT_ED
00002433                          1405      
00002433                          1406  ;GO
00002433                          1407  MSG_HELP_GO:
00002433= 52 55 4E 53 20 41 ...   1408      DC.B    'RUNS A PROGRAM START FROM MEMORY LOCATION ADDR1',CR,LF
00002464= 47 4F 20 3C 61 64 ...   1409      DC.B    'GO <addr1>'
0000246E                          1410  MSG_HELP_GO_ED
0000246E                          1411  
0000246E                          1412  ;DISPLAY
0000246E                          1413  MSG_HELP_DF:
0000246E= 44 49 53 50 4C 41 ...   1414      DC.B    'DISPLAYS FORMATED REGISTERS INCLUDING: PC,SR,US,SS,D AND A REGISTERS',CR,LF
000024B4= 44 46                   1415      DC.B    'DF'
000024B6                          1416  MSG_HELP_DF_ED    
000024B6                          1417  
00003000                          1418      ORG $3000
00003000                          1419  INPUT_BUFF:
00003000                          1420      DS.B    BUFFSIZE 
00003256                          1421  OUTPUT_BUFF:
00003256                          1422      DS.B    BUFFSIZE
000034AC                          1423  HISTORY_BUFF:
000034AC                          1424      DS.B    BUFFSIZE    
00003702                          1425  ADDR_BUFF:
00003702                          1426      DS.B    8
00004000                          1427      ORG $4000
00004000                          1428      DS.B    1024    ;RESERVE 1KB FOR A7 STACK
00004400                          1429  STACK:    
00004400                          1430      DS.L    20      ;RESERVE 40 BYTES FOR
00004450                          1431  REGISTER_STACK: 
00004450                          1432      DS.L    1
00004454                          1433  REGISTER_PC:   
00004454                          1434      DS.L    1
00004458                          1435      END    START        

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADD                 167E
ADDR_BUFF           3702
ADRS_ERR            926
AND                 16B2
ASCII2HEX           12A2
ASCII2HEX_END       12FC
ASCII2HEX_LOOP      12B6
ASCII2HEX_NUM       12E0
ASCII2HEX_SUM       12E4
A_ASC               41
BA_ER_PRINT         9BE
BF                  1946
BFEXIT              19A2
BFLOOP              1998
BMOV                19AA
BMOV_EXIT           19DC
BMOV_LOOP           19D2
BSCH                15E0
BSCH_END            167A
BSCH_FAILD          163E
BSCH_LOOP_1         1610
BSCH_LOOP_2         1620
BSCH_SUCCESS        1652
BT                  1BC0
BT_1                1C1A
BT_2                1C38
BT_ERROR            1C5A
BT_FILL_LOOP        1C08
BT_PASS             1CC2
BUFFSIZE            256
BUS_ERR             906
B_ASC               42
CHK_INST            96E
COLON               3A
COMMA               2C
COMPARE             1240
COMPARE_CHK_END     1266
COMPARE_END         1268
CONVERT_HEX         128E
CR                  D
DF                  19DE
DFEND               1BB4
DF_A                1B42
DF_A_LOOP           1B50
DF_A_NEWLINE        1B9A
DF_D                1AD0
DF_D_LOOP           1ADE
DF_D_NEWLINE        1B28
DIV_ZERO            946
DOLLAR              24
DOT                 2E
D_ASC               44
EXIT                1D74
F_ASC               46
GO                  1CDA
G_ASC               47
HELP                1330
HELP_ADD            14F0
HELP_AND            1504
HELP_BF_MSG         157C
HELP_BMOV_MSG       1590
HELP_BSCH           14DC
HELP_BT_MSG         15A4
HELP_DF_MSG         15CC
HELP_EXIT           14DA
HELP_EXIT_MSG       1540
HELP_GO_MSG         15B8
HELP_LOOP           1352
HELP_MDSP           152C
HELP_MM_MSG         1554
HELP_MS_MSG         1568
HELP_RC             1518
HEX2ASCII           126A
HEX2ASCII_LOOP      1274
HEXBYTE             193E
HEXFROMINPUT        1CEA
HEXLW               1942
HEXWORD             193A
HISTORY_BUFF        34AC
H_ASC               48
ILL_INST            95A
INPUT               10A2
INPUT_BUFF          3000
INTERPRETER         10C0
INTERPRETER_END     123E
LARGER              3E
LF                  A
LINE_A              996
LINE_F              9AA
LOAD_55             1C32
LOAD_AA             1C4C
L_ASC               4C
MAIN                1060
MDSP                1748
MM                  1858
MMEXIT              18E2
MMLOOP              1872
MS                  18E4
MSG_0_ER            1F11
MSG_0_ER_ED         1F29
MSG_ADDR_ER         1EC0
MSG_ADDR_ER_ED      1ED7
MSG_BSCH_FAILD      1E34
MSG_BSCH_FAILD_ED   1E45
MSG_BSCH_SUCCESS    1E21
MSG_BSCH_SUCCESS_ED  1E34
MSG_BT_FAIL         1E9B
MSG_BT_FAIL_ED      1EAD
MSG_BT_PASS         1E89
MSG_BT_PASS_ED      1E9B
MSG_BUS_ER          1EAD
MSG_BUS_ER_ED       1EC0
MSG_CHK_ER          1F29
MSG_CHK_ER_ED       1F42
MSG_CMD_ADD         1D84
MSG_CMD_ADD_ED      1D87
MSG_CMD_AND         1D89
MSG_CMD_AND_ED      1D8C
MSG_CMD_BF          1DA5
MSG_CMD_BF_ED       1DA7
MSG_CMD_BMOV        1DA9
MSG_CMD_BMOV_ED     1DAD
MSG_CMD_BSCH        1D7E
MSG_CMD_BSCH_ED     1D82
MSG_CMD_BT          1DAF
MSG_CMD_BT_ED       1DB1
MSG_CMD_DF          1DB7
MSG_CMD_DF_ED       1DB9
MSG_CMD_EXIT        1D97
MSG_CMD_EXIT_ED     1D9B
MSG_CMD_FST         1D7E
MSG_CMD_GO          1DB3
MSG_CMD_GO_ED       1DB5
MSG_CMD_HELP        1D78
MSG_CMD_HELP_ED     1D7C
MSG_CMD_LST         1DB9
MSG_CMD_MDSP        1D91
MSG_CMD_MDSP_ED     1D95
MSG_CMD_MM          1D9D
MSG_CMD_MM_ED       1D9F
MSG_CMD_MS          1DA1
MSG_CMD_MS_ED       1DA3
MSG_CMD_RC          1D8E
MSG_CMD_RC_ED       1D8F
MSG_FINISH          1E6D
MSG_FINISH_ED       1E74
MSG_HELP            1DED
MSG_HELP_ADD        2012
MSG_HELP_ADD_ED     2043
MSG_HELP_AND        2043
MSG_HELP_AND_ED     2074
MSG_HELP_BF         22D2
MSG_HELP_BF_ED      2376
MSG_HELP_BMOV       2376
MSG_HELP_BMOV_ED    23E1
MSG_HELP_BSCH       1F60
MSG_HELP_BSCH_ED    2012
MSG_HELP_BT         23E1
MSG_HELP_BT_ED      2433
MSG_HELP_DF         246E
MSG_HELP_DF_ED      24B6
MSG_HELP_ED         1E21
MSG_HELP_EXIT       2119
MSG_HELP_EXIT_ED    2138
MSG_HELP_GO         2433
MSG_HELP_GO_ED      246E
MSG_HELP_MDSP       2091
MSG_HELP_MDSP_ED    2119
MSG_HELP_MM         2138
MSG_HELP_MM_ED      21F4
MSG_HELP_MS         21F4
MSG_HELP_MS_ED      22D2
MSG_HELP_PROM       1E52
MSG_HELP_PROM_ED    1E6D
MSG_HELP_RC         2074
MSG_HELP_RC_ED      2091
MSG_HIS_EMPTY       1E74
MSG_HIS_EMPTY_ED    1E89
MSG_ILL_ER          1ED7
MSG_ILL_ER_ED       1EF4
MSG_LINE_A_ER       1F42
MSG_LINE_A_ER_ED    1F51
MSG_LINE_F_ER       1F51
MSG_LINE_F_ER_ED    1F60
MSG_PRIVILEGE_ER    1EF4
MSG_PRIVILEGE_ER_ED  1F11
MSG_PROM            1DE2
MSG_PROM_ED         1DED
MSG_WELCOME         1DB9
MSG_WELCOME_ED      1DE2
MSG_WRONG_CMD       1E45
MSG_WRONG_CMD_ED    1E52
MSHEX               1914
MSSTRING            192C
M_ASC               4D
NULL                0
ONEMEM              176E
ONEMEMLOOP          1770
OUTPUT_BUFF         3256
PRINT               107A
PRINT_A             1D32
PRINT_C             108E
PRINT_COLON         1D5E
PRINT_CR_LF         1D02
PRINT_D             1D1C
PRINT_SPACE         1D48
PRIV_VIOL           982
Q_ASC               51
RC                  16E6
RC_END              1714
RC_LOOP             170C
RC_PROCESS          1706
REGISTER_PC         4454
REGISTER_STACK      4450
RESET               1050
SPACE               20
SPACE_CHECK         1CF8
STACK               4400
START               1000
STORE_ASCII         1292
STORE_HIS           130A
STORE_HIST_LOOP     131A
STORE_HIS_END       1326
STRINGEND           1938
SYNTAX_ER           1724
S_ASC               53
TWOMEM              17D8
TWOMEMLOOP          17F0
W_ASC               57
